schema env
version 1.0.0
description "Environment variable access and manipulation"

functions {
  get {
    description "Gets an environment variable value"
    parameters {
      key {
        type string
        required!bool true
        description "Environment variable name"
      }
      default {
        type string
        required!bool false
        default ""
        description "Default value if variable is not set"
      }
    }
    returns {
      type string
      description "Environment variable value or default"
    }
  }

  has {
    description "Checks if an environment variable exists"
    parameters {
      key {
        type string
        required!bool true
        description "Environment variable name"
      }
    }
    returns {
      type bool
      description "True if variable exists, false otherwise"
    }
  }

  list {
    description "Lists all environment variables"
    parameters {
      prefix {
        type string
        required!bool false
        default ""
        description "Optional prefix filter"
      }
    }
    returns {
      type list
      description "List of environment variable names"
    }
  }

  expand {
    description "Expands environment variables in a string"
    parameters {
      template {
        type string
        required!bool true
        description "String with $VAR or ${VAR} references"
      }
    }
    returns {
      type string
      description "String with variables expanded"
    }
    notes!2 ```
      Supports both $VAR and ${VAR} syntax
      Undefined variables are left as-is
      ```
  }
}

metadata {
  author "UP Language Team"
  license MIT
  repository https://github.com/uplang/ns

  usage_notes!2 ```
    Best Practices:
    - Always provide defaults with get()
    - Use has() before get() for required variables
    - Use list() for discovery and debugging
    - Use expand() for complex string templates
    ```
}
